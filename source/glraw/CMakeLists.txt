
# Target
set(target glraw)
message(STATUS "Configuring ${target}")

# Libraries
set(libs
    ${OPENGL_LIBRARIES}
    ${GLEW_LIBRARY}
)

# Definitions
add_definitions("-DGLRAW_EXPORTS")

if (OPTION_ERRORS_AS_EXCEPTION)
    add_definitions("-DGLRAW_GL_ERROR_RAISE_EXCEPTION")
else()
    add_definitions("-D_HAS_EXCEPTIONS=0")
endif()

# Sources
set(header_path "${GLRAW_SOURCE_DIR}/include/glraw")
set(source_path "${CMAKE_CURRENT_SOURCE_DIR}")

set(api_includes
    ${header_path}/glraw.h

    ${header_path}/AssetInformation.h
    ${header_path}/ConvertManager.h
    ${header_path}/RawConverter.h
    ${header_path}/ImageEditorInterface.h
    ${header_path}/MirrorEditor.h
    ${header_path}/ScaleEditor.h

    ${header_path}/GLRawFile.h
    ${header_path}/FileWriter.h

    ${header_path}/Canvas.h
)

set(sources
    ${source_path}/AssetInformation.cpp
    ${source_path}/ConvertManager.cpp
    ${source_path}/RawConverter.cpp
    ${source_path}/MirrorEditor.cpp
    ${source_path}/ScaleEditor.cpp

    ${source_path}/GLRawFile.cpp
    ${source_path}/FileWriter.cpp

    ${source_path}/Canvas.cpp
)

# Group source files
set(glraw_header_group "Header Files (API)")
set(glraw_source_group "Source Files")
source_group_by_path(${header_path} "\\\\.h$|\\\\.hpp$" 
    ${glraw_header_group} ${api_includes})
source_group_by_path(${source_path} "\\\\.cpp$|\\\\.c$|\\\\.h$|\\\\.hpp$" 
    ${glraw_source_group} ${sources})

# Build library

if(OPTION_BUILD_STATIC)
    add_library(${target} ${api_includes} ${sources})
else()
    add_library(${target} SHARED ${api_includes} ${sources})
endif()

target_link_libraries(${target} ${libs})

qt5_use_modules(${target} OpenGL Gui Widgets)   

set_target_properties(${target}
    PROPERTIES
    LINKER_LANGUAGE CXX
    COMPILE_DEFINITIONS_DEBUG   "${DEFAULT_COMPILE_DEFS_DEBUG}"
    COMPILE_DEFINITIONS_RELEASE "${DEFAULT_COMPILE_DEFS_RELEASE}"
    COMPILE_FLAGS               "${DEFAULT_COMPILE_FLAGS}"
    LINK_FLAGS_DEBUG            "${DEFAULT_LINKER_FLAGS_DEBUG}"
    LINK_FLAGS_RELEASE          "${DEFAULT_LINKER_FLAGS_RELEASE}"
    DEBUG_POSTFIX               "d${DEBUG_POSTFIX}"
    INCLUDE_PATH                "${GLRAW_SOURCE_DIR}/include")

# Deployment
install(TARGETS ${target}
    RUNTIME DESTINATION ${INSTALL_BIN}
    LIBRARY DESTINATION ${INSTALL_SHARED}
    ARCHIVE DESTINATION ${INSTALL_LIB}
)
